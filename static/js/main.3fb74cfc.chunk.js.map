{"version":3,"sources":["styles/global.js","components/UI/Layout/styles.js","components/UI/Layout/index.js","components/UI/Main/styles.js","components/UI/Main/index.js","components/UI/Sidebar/styles.js","components/UI/Sidebar/index.js","components/Header/styles.js","components/Header/index.js","components/TableLiveCases/styles.js","components/UI/Table/styles.js","components/UI/Table/index.js","components/TableLiveCases/index.js","components/Graph/styles.js","hooks/useFetch.js","components/Graph/options.js","components/Graph/index.js","components/UI/Map/styles.js","components/UI/Map/index.js","components/CovidMap/styles.js","components/CovidMap/index.js","components/CardInfo/styles.js","components/CardInfo/index.js","App.js","index.js","assets/logo2.png"],"names":["createGlobalStyle","Container","styled","div","Layout","children","Main","Sidebar","Logo","img","WrapperLogo","h1","WrapperSelect","Select","select","React","memo","handleCountry","currentValue","countries","src","logo","alt","value","onChange","e","target","map","country","key","Arrow","FiArrowUpCircle","props","show","css","columns","data","heading","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","TableLiveCases","refTable","createRef","useState","backTop","setBackTop","useMemo","Header","accessor","onScroll","scrollTop","ref","onClick","current","scrollTo","top","behavior","ButtonGroup","Actions","Button","button","active","initialURL","initialData","transform","url","setURL","loading","setLoading","error","setError","setData","transformCallback","useCallback","useEffect","a","axios","get","response","dataTransformed","fetchData","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipsItem","numeral","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","buildChartData","caseType","lastDataPoint","chartData","date","cases","newDataPoint","x","y","push","Graph","days","setDays","setCaseType","useFetch","control","doFetch","fetchCallback","_","options","optionsChart","datasets","backgroundColor","borderColor","coords","center","zoom","TileLayer","attribution","flatStyle","casesTypeColors","hex","rgb","half_op","multiplier","centralize","lat","lng","long","Circle","countryInfo","color","fillColor","fillOpacity","Math","sqrt","Popup","className","style","backgroundImage","flag","recovered","deaths","LayoutWrapper","background","Title","h2","Body","Footer","Wrapper","CardInfo","title","total","bg","buildURL","term","App","query","setQuery","reduce","acc","cv","transformDataCountry","generaControl","generalInfo","todayCases","todayDeaths","todayRecovered","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3fb74cfc.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n    *{\n        margin: 0;\n        padding: 0;\n        outline: 0;\n        box-sizing: border-box;\n    }\n    *:focus{\n        outline: 0;\n    }\n    html,body, #root{\n        font-size: 62.5%;\n        height: 100%;\n    }\n    body{\n        -webkit-font-smoothing: antialiased;\n    }\n    body,input, button{\n        font: 14px 'Roboto', sans-serif;\n    }\n    a{ text-decoration:none;}\n    ul{ list-style: none;}\n    button{\n        cursor: pointer;\n    }\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  max-width: 1280px;\n  min-height: 100vh;\n  margin: 0 auto;\n\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n","import React from \"react\";\n\nimport { Container } from \"./styles\";\n\nfunction Layout({ children }) {\n  return <Container>{children}</Container>;\n}\n\nexport default Layout;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n\n  @media (min-width: 768px) {\n    width: 70%;\n  }\n`;\n","import React from \"react\";\n\nimport { Container } from \"./styles\";\n\nfunction Main({ children }) {\n  return <Container>{children}</Container>;\n}\n\nexport default Main;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n\n  @media (min-width: 768px) {\n    width: 30%;\n  }\n`;\n","import React from \"react\";\n\nimport { Container } from \"./styles\";\n\nfunction Sidebar({ children }) {\n  return <Container>{children}</Container>;\n}\n\nexport default Sidebar;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport const Logo = styled.img`\n  max-width: 100%;\n  width: 100%;\n  height: auto;\n  display: block;\n`;\n\nexport const WrapperLogo = styled.h1`\n  width: 80px;\n  height: 80px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 2rem;\n`;\n\nexport const WrapperSelect = styled.div`\n  width: 100%;\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media (min-width: 768px) {\n    width: 50%;\n    align-items: flex-end;\n  }\n`;\nexport const Select = styled.select`\n  padding: 1rem;\n  width: 50%;\n  border-radius: 3px;\n  border-color: #e1e2e2;\n  background: transparent;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n`;\n","import React from \"react\";\nimport * as S from \"./styles\";\nimport logo from \"../../assets/logo2.png\";\nfunction Header({ handleCountry, currentValue, countries }) {\n  return (\n    <S.Container>\n      <S.WrapperLogo>\n        <S.Logo src={logo} alt=\"covid 19 tracker\" />\n      </S.WrapperLogo>\n\n      <S.WrapperSelect>\n        <S.Select\n          value={currentValue}\n          onChange={(e) => handleCountry(e.target.value)}\n        >\n          <option value={currentValue}> {currentValue} </option>\n\n          {countries.map(({ country }) => (\n            <option key={country} value={country}>\n              {country}\n            </option>\n          ))}\n        </S.Select>\n      </S.WrapperSelect>\n    </S.Container>\n  );\n}\n\nexport default React.memo(Header);\n","import styled, { css } from \"styled-components\";\nimport { FiArrowUpCircle } from \"react-icons/fi\";\nexport const Container = styled.div`\n  width: 100%;\n  position: relative;\n  overflow: hidden; /** hidden the arrow back to top */\n  box-shadow: 0px 10px 15px #1b1c2029;\n  border-radius: 3px;\n  &::-webkit-scrollbar-track {\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    background-color: #f5f5f5;\n  }\n\n  &::-webkit-scrollbar {\n    width: 6px;\n    background-color: #f5f5f5;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: #000000;\n  }\n\n  > div {\n    width: 100%;\n    margin-top: 2rem;\n    max-height: 50vh;\n    overflow-y: scroll;\n\n    > table {\n      width: 100%;\n      border-spacing: 0;\n\n      thead [role=\"columnheader\"] {\n        font-size: 2.5rem;\n        color: #515768;\n        text-align: center;\n      }\n\n      tbody tr:nth-of-type(odd) {\n        background-color: #dedede;\n      }\n      th,\n      td {\n        margin: 0;\n        padding: 0.5rem;\n\n        font-size: 1.2rem;\n        font-weight: 400;\n        :last-child {\n          border-right: 0;\n        }\n      }\n    }\n  }\n`;\nexport const Title = styled.div``;\nexport const Arrow = styled(FiArrowUpCircle)`\n  position: absolute;\n  top: 45vh;\n  right: 20px;\n  font-size: 3rem;\n  visibility: hidden;\n  opacity: 0;\n  cursor: pointer;\n\n  transition: visibility 500ms ease, opacity 500ms ease;\n\n  ${(props) =>\n    props.show &&\n    css`\n      visibility: visible;\n      opacity: 1;\n    `}\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  grid-area: \"main\";\n\n  @media (min-width: 768px) {\n    grid-area: sidebar;\n  }\n`;\n","import React from \"react\";\nimport { useTable } from \"react-table\";\nimport * as S from \"./styles\";\n\nfunction Table({ columns, data, heading }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data });\n  return (\n    <S.Container>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </S.Container>\n  );\n}\n\nexport default React.memo(Table);\n","import React, { useState, createRef } from \"react\";\nimport { Container, Arrow } from \"./styles\";\nimport Table from \"../UI/Table\";\n\nfunction TableLiveCases({ data }) {\n  const refTable = createRef();\n  const [backTop, setBackTop] = useState(0);\n\n  const handleScroll = (e) => {\n    if (backTop) return;\n    if (e.target.scrollTop > 300) setBackTop(e.target.scrollTop);\n  };\n\n  const handleBackTop = () => {\n    refTable.current.children[0].scrollTo({ top: 0, behavior: \"smooth\" });\n\n    setBackTop(0);\n  };\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Casos em tempo real\",\n        columns: [\n          {\n            Header: \"País\",\n            accessor: \"country\",\n          },\n          {\n            Header: \"Casos\",\n            accessor: \"cases\",\n          },\n        ],\n      },\n    ],\n    []\n  );\n\n  return (\n    <Container onScroll={handleScroll} ref={refTable}>\n      {data && <Table columns={columns} data={data} />}\n\n      <Arrow show={backTop} onClick={handleBackTop} />\n    </Container>\n  );\n}\n\nexport default TableLiveCases;\n","import styled, { css } from \"styled-components\";\n\nexport const Container = styled.div`\n  max-height: 30vh;\n`;\nexport const ButtonGroup = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const Actions = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  /* width: calc(100% - 3rem); retira margens */\n  margin: 3rem auto;\n\n  > select {\n    flex: 1 0 auto;\n    border: 1px solid #e6e6e6;\n    background: transparent;\n    margin-bottom: 1rem;\n    padding: 0.5rem 2rem;\n    border-radius: 3px;\n  }\n`;\nexport const Button = styled.button`\n  margin-left: 1rem;\n  margin-bottom: 1rem;\n  padding: 0.5rem 2rem;\n  border-radius: 30px;\n  color: #515768;\n  font-weight: 400;\n  border: none;\n  transition: background ease 500ms;\n  ${(props) =>\n    props.active &&\n    css`\n      background: #5dead7 !important;\n    `}\n  &:active {\n    background: #b6bad1;\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useCallback } from \"react\";\n\nexport default function (initialURL, initialData, transform) {\n  const [url, setURL] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState(initialData);\n\n  let transformCallback = null;\n\n  if (typeof transform === \"function\") {\n    transformCallback = useCallback(transform, []);\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      try {\n        const response = await axios.get(initialURL);\n        setData(response.data);\n\n        if (transformCallback) {\n          const dataTransformed = transformCallback(response.data);\n          setData(dataTransformed);\n        }\n      } catch (error) {\n        setError(error);\n      }\n      setLoading(false);\n    }\n    fetchData();\n  }, [initialURL, transformCallback, url]);\n\n  return [{ loading, data, error }, setURL];\n}\n","import numeral from \"numeral\";\n\nexport default {\n  legend: {\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipsItem) {\n        return numeral(tooltipsItem.value).format(\"+0,0\");\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          callback: function (value) {\n            return numeral(value).format(\"0a\");\n          },\n        },\n      },\n    ],\n  },\n};\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Container, Actions, Button, ButtonGroup } from \"./styles\";\nimport useFetch from \"../../hooks/useFetch\";\nimport optionsChart from \"./options\";\n\nconst buildChartData = (data, caseType) => {\n  let chartData = [];\n  let lastDataPoint;\n  for (let date in data.cases) {\n    if (lastDataPoint) {\n      let newDataPoint = {\n        x: date,\n        y: data[caseType][date] - lastDataPoint,\n      };\n      chartData.push(newDataPoint);\n    }\n    lastDataPoint = data[caseType][date];\n  }\n  return chartData;\n};\n\nfunction Graph() {\n  const [days, setDays] = useState(30);\n  const [caseType, setCaseType] = useState(\"cases\");\n\n  const [control, doFetch] = useFetch(\n    `https://disease.sh/v3/covid-19/historical/all?lastdays=${days}`,\n    []\n  );\n  const fetchCallback = useCallback(doFetch, []);\n  const { data, loading, error } = control;\n\n  useEffect(() => {\n    fetchCallback(\n      `https://disease.sh/v3/covid-19/historical/all?lastdays=${days}`,\n      []\n    );\n  }, [days, fetchCallback]);\n\n  const onHandleCaseType = (e) => {\n    setCaseType(e.target.value);\n  };\n\n  return (\n    <Container>\n      <Actions>\n        <select value={caseType} onChange={onHandleCaseType}>\n          <option value=\"cases\">Casos</option>\n          <option value=\"recovered\"> Recuperados</option>\n          <option value=\"deaths\">Mortes</option>\n        </select>\n        <ButtonGroup>\n          <Button onClick={(_) => setDays(30)} active={days === 30}>\n            30\n          </Button>\n          <Button onClick={(_) => setDays(60)} active={days === 60}>\n            60\n          </Button>\n          <Button onClick={(_) => setDays(90)} active={days === 90}>\n            90\n          </Button>\n          <Button onClick={(_) => setDays(120)} active={days === 120}>\n            120\n          </Button>\n        </ButtonGroup>\n      </Actions>\n      {error && <h1>Erro ao processar requisição</h1>}\n      {loading && <h1>Carregando gráfico</h1>}\n      {data && (\n        <Line\n          options={optionsChart}\n          data={{\n            datasets: [\n              {\n                backgroundColor: \"rgba(204,16,53,0.4)\",\n                borderColor: \"#cc1034\",\n                data: buildChartData(data, caseType),\n              },\n            ],\n          }}\n        />\n      )}\n    </Container>\n  );\n}\n\nexport default Graph;\n\n// [\n//   {\n//     x: \"4/14/20\",\n//     y: 1985901,\n//   },\n//   {\n//     x: \"4/15/20\",\n//     y: 2066740 - 1985901,\n//   },\n//   {\n//     x: \"4/16/20\",\n//     y: 2163426 - (2066740 - 1985901),\n//   },\n//   {\n//     x: \"4/17/20\",\n//     y: 2251145 - (2163426 - (2066740 - 1985901)),\n//   },\n//   {\n//     x: \"5/16/20\",\n//     y: 2163426 - (2066740 - 1985901),\n//   },\n//   {\n//     x: \"5/17/20\",\n//     y: 2251145 - (2163426 - (2066740 - 1985901)),\n//   },\n//   {\n//     x: \"6/16/20\",\n//     y: 2163426 - (2066740 - 1985901),\n//   },\n//   {\n//     x: \"6/17/20\",\n//     y: 2251145 - (2163426 - (2066740 - 1985901)),\n//   },\n// ],\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  min-height: 40vh;\n  display: flex;\n  > div {\n    width: calc(100% - 3rem); /* retira margens */\n    margin: 0 auto;\n    border-radius: 3px;\n    box-shadow: 0px 10px 15px #1b1c2029;\n  }\n`;\n","import React from \"react\";\nimport { Map as LeafletMap, TileLayer } from \"react-leaflet\";\nimport { Container } from \"./styles\";\n\nfunction Map({ children, coords }) {\n  //coords: { lat: 34.80746, lng: -40.4796 }\n\n  return (\n    <Container>\n      <LeafletMap center={coords} zoom={3}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        {children}\n      </LeafletMap>\n    </Container>\n  );\n}\n\nexport default React.memo(Map);\n","import styled, { css } from \"styled-components\";\n\nconst flatStyle = css`\n  .info-flag img {\n    width: 100px;\n    border-radius: 5px;\n  }\n\n  .info-name {\n    font-size: 20px;\n    font-weight: bold;\n    color: #555;\n  }\n\n  .info-container {\n    width: 150px;\n  }\n\n  .info-flag {\n    height: 80px;\n    width: 100%;\n    background-size: cover;\n    border-radius: 8px;\n  }\n\n  .info-confirmed,\n  .info-recovered,\n  .info-deaths {\n    font-size: 16px;\n    margin-top: 5px;\n  }\n`;\n\nexport const Container = styled.div`\n  ${flatStyle}\n`;\n","import React from \"react\";\nimport { Circle, Popup } from \"react-leaflet\";\nimport numeral from \"numeral\";\nimport Map from \"../UI/Map\";\nimport { Container } from \"./styles\";\n\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    rgb: \"rgb(204, 16, 52)\",\n    half_op: \"rgba(204, 16, 52, 0.5)\",\n    multiplier: 800,\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    rgb: \"rgb(125, 215, 29)\",\n    half_op: \"rgba(125, 215, 29, 0.5)\",\n    multiplier: 1200,\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    rgb: \"rgb(251, 68, 67)\",\n    half_op: \"rgba(251, 68, 67, 0.5)\",\n    multiplier: 2000,\n  },\n};\n\nfunction CovidMap({ countries, centralize }) {\n  return (\n    <Container>\n      {countries ? (\n        <Map coords={{ lat: centralize.lat, lng: centralize.long }}>\n          {countries &&\n            countries.map((country) => {\n              return (\n                <Circle\n                  key={country.country}\n                  center={[country.countryInfo.lat, country.countryInfo.long]}\n                  color={casesTypeColors[\"cases\"].hex}\n                  fillColor={casesTypeColors[\"cases\"].hex}\n                  fillOpacity={0.4}\n                  radius={\n                    Math.sqrt(country[\"cases\"]) *\n                    casesTypeColors[\"cases\"].multiplier\n                  }\n                >\n                  <Popup>\n                    <div className=\"info-container\">\n                      <div\n                        className=\"info-flag\"\n                        style={{\n                          backgroundImage: `url(${country.countryInfo.flag})`,\n                        }}\n                      ></div>\n                      <div className=\"info-name\">{country.country}</div>\n                      <div className=\"info-confirmed\">\n                        Cases: {numeral(country.cases).format(\"0,0\")}\n                      </div>\n                      <div className=\"info-recovered\">\n                        Recovered: {numeral(country.recovered).format(\"0,0\")}\n                      </div>\n                      <div className=\"info-deaths\">\n                        Deaths: {numeral(country.deaths).format(\"0,0\")}\n                      </div>\n                    </div>\n                  </Popup>\n                </Circle>\n              );\n            })}\n        </Map>\n      ) : (\n        <Map coords={centralize} />\n      )}\n    </Container>\n  );\n}\n\nexport default React.memo(CovidMap);\n","import styled, { css } from \"styled-components\";\n\nexport const LayoutWrapper = styled.div`\n  width: 100%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  grid-area: main;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n\n  flex-direction: column;\n  align-items: center;\n  border-radius: 3px;\n  box-shadow: 0px 10px 15px #1b1c2029;\n  background: #e6e6e6;\n  cursor: pointer;\n  transition: transform 500ms ease;\n  ${({ background }) =>\n    background &&\n    css`\n      background: ${background} !important;\n    `}\n  padding: 2rem;\n  margin: 1.5rem;\n\n  @media (min-width: 768px) {\n    flex: 1 0 auto;\n  }\n\n  &:hover {\n    transform: translateY(-1rem);\n  }\n`;\nexport const Title = styled.h2`\n  font-size: 2rem;\n  font-weight: 400;\n  color: #515768;\n  margin-bottom: 1rem;\n`;\nexport const Body = styled.div`\n  font-size: 3.5rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n  color: #515768;\n  > p {\n    > span {\n      margin-left: 1rem;\n    }\n  }\n`;\nexport const Footer = styled.div`\n  font-size: 1.5rem;\n  font-weight: 300;\n  > p {\n    > span {\n      margin-left: 0.5rem;\n    }\n  }\n`;\n","import React from \"react\";\n\nimport { Container, LayoutWrapper, Title, Body, Footer } from \"./styles\";\n\nexport function Wrapper({ children }) {\n  return <LayoutWrapper>{children}</LayoutWrapper>;\n}\n\nfunction CardInfo({ title, cases, total, bg }) {\n  return (\n    <Container background={bg}>\n      <Title>{title}</Title>\n      <Body>\n        <p>\n          Hoje\n          <span>{cases}</span>\n        </p>\n      </Body>\n      <Footer>\n        <p>\n          Total:\n          <span>{total}</span>\n        </p>\n      </Footer>\n    </Container>\n  );\n}\n\nexport default CardInfo;\n","import React, { useState, useEffect } from \"react\";\nimport GlobalStyle from \"./styles/global\";\nimport \"leaflet/dist/leaflet.css\";\nimport Layout from \"./components/UI/Layout\";\nimport Main from \"./components/UI/Main\";\nimport Sidebar from \"./components/UI/Sidebar\";\nimport Header from \"./components/Header\";\nimport TableLiveCases from \"./components/TableLiveCases\";\nimport Graph from \"./components/Graph\";\nimport CovidMap from \"./components/CovidMap\";\nimport CardInfo, { Wrapper } from \"./components/CardInfo\";\nimport useFetch from \"./hooks/useFetch\";\n\nconst buildURL = (term) => {\n  return term === \"Mundo\"\n    ? \"https://disease.sh/v3/covid-19/all\"\n    : `https://disease.sh/v3/covid-19/countries/${term}`;\n};\n\nconst transformDataCountry = (data) =>\n  data.reduce(\n    (acc, cv) => [\n      ...acc,\n      { country: cv.country, cases: cv.cases, countryInfo: cv.countryInfo },\n    ],\n    []\n  );\n\nfunction App() {\n  const [query, setQuery] = useState(\"Mundo\");\n\n  const [generaControl] = useFetch(\n    \"https://disease.sh/v3/covid-19/countries\",\n    [],\n    (data) => transformDataCountry(data)\n  );\n  const [control, doFetch] = useFetch(buildURL(query), []);\n\n  const { data: countries } = generaControl;\n  const { loading, error, data: generalInfo } = control;\n\n  useEffect(() => {\n    doFetch(buildURL(query));\n  }, [doFetch, query]);\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n      <Layout>\n        <Main>\n          <Header\n            handleCountry={setQuery}\n            currentValue={query}\n            countries={countries}\n          />\n          {error && <h1>Erro ao processar requisição</h1>}\n          {loading ? (\n            <h1>Loading</h1>\n          ) : (\n            <Wrapper>\n              <CardInfo\n                title=\"Casos Coronavírus\"\n                cases={generalInfo.todayCases}\n                total={generalInfo.cases}\n                bg=\"#839efc\"\n              />\n              <CardInfo\n                title=\"Mortes\"\n                cases={generalInfo.todayDeaths}\n                total={generalInfo.deaths}\n                bg=\"#d22828\"\n              />\n              <CardInfo\n                title=\"Recuperados\"\n                cases={generalInfo.todayRecovered}\n                total={generalInfo.recovered}\n                bg=\"#00e676\"\n              />\n            </Wrapper>\n          )}\n\n          {generalInfo && (\n            <CovidMap\n              centralize={\n                generalInfo.countryInfo\n                  ? generalInfo.countryInfo\n                  : { lat: 34.80746, long: -40.4796 }\n              }\n              countries={countries}\n            />\n          )}\n        </Main>\n        <Sidebar>\n          <TableLiveCases data={countries} />\n          <Graph />\n        </Sidebar>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo2.9df79656.png\";"],"sourceRoot":""}